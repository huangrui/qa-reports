.page_content
  = yield :notification_area

  - action = controller.action_name
  - if action == 'compare'
    - cache_key = @compare_cache_key
  - else
    - cache_key = "#{action}_page_#{@report.id}"

  = yield :button_area

  = cache cache_key do
    = render :partial => 'editable_title'
    = yield :title || render(:partial => 'editable_title')
    .report_head
      = yield :table_of_contents
      dl.meta_info
        dt#report_author Author:
        dd
          = @report.author.name
          br/
          span.un= format_date_to_human_readable @report.created_at
        dt Last modified by:
        dd
          = @report.editor.name
          br/
          span.un= format_date_to_human_readable @report.updated_at
        = render :partial => 'editable_date'

    = render :partial => 'editable_text', :locals => {:anchor => 'test_objective', :title => "Test Objective", :field => 'objective'}
    = render :partial => 'editable_text', :locals => {:anchor => 'build', :title => "Build (image)", :field => 'build'}
    = render :partial => 'editable_text', :locals => {:anchor => 'environment', :title => "Test Environment", :field => 'environment'}
    = render :partial => 'editable_text', :locals => {:anchor => 'qa_summary', :title => "Quality Summary", :field => 'qa_summary'}
    = render :partial => 'reports/test_results'

    = yield :result_edit_notification

    - if @report.has_non_nft?
      h2#detailed_results
        | Detailed Test Results
        small
          a href=url_for(:controller=>'csv_export', :action=>'export_report', :release_version=>@report.release.name, :target=>@report.profile.name, :testset=>@report.testset, :product=>@report.product, :id=>@report.id) Download as CSV
        span.heading_actions= back_to_top

      table#detailed_functional_test_results.detailed_results
        #history_loader.loading
          strong Loading history data, please waitâ€¦
        thead
          tr
            th#th_test_case colspan="2"
              span.sort
                a.see_only_failed_button.sort_btn.non_nft_button#detailed_case.active href="#" See only failed
                a.see_all_button.sort_btn.non_nft_button#detailed_case href="#" See all
                - if @history
                  a.see_history_button.sort_btn.non_nft_button#detailed_case href="#" See history

                - unless @build_diff.empty?
                  a.see_the_same_build_button.sort_btn#detailed_case href="#" See build
            th#th_result Result
            th#th_notes Notes

        = render :partial => "feature", :collection => @report.non_nft_features

      - if @history
        table.detailed_results.history style="display:none;"
          thead
            tr
              th#th_history_test_case
                span.sort
                  a.see_only_failed_button.sort_btn.non_nft_button#detailed_case href="#" See only failed
                  a.see_all_button.sort_btn.non_nft_button#detailed_case href="#" See all
                  a.see_history_button.sort_btn.non_nft_button#detailed_case.active href="#" See history

                  - unless @build_diff.empty?
                    a.see_the_same_build_button.sort_btn#detailed_case href="#" See build
              = history_headers(@history)
              th.th_result Current
              th#th_notes Latest notes

          = render :partial => "feature_history", :collection => @report.non_nft_features

      - unless @build_diff.empty?
        table.detailed_results.build style="display:none"
          thead
            tr.compare_set
              th#th_build_test_case
                span.sort
                  a.see_only_failed_button.sort_btn#detailed_case href="#" See only failed
                  a.see_all_button.sort_btn#detailed_case href="#" See all
                  - if @history
                    a.see_history_button.sort_btn#detailed_case.active href="#" See history
                  a.see_the_same_build_button.sort_btn#detailed_case href="#"  See build
              = build_id_headers(@build_diff)
              th.th_build_result *#{@report.build_id}
              th
                div style="position:relative;"

          = render :partial => "feature_build", :collection => @report.non_nft_features

    - if @report.has_nft?
      h2#detailed_nft_results
        | Non-functional Test Results
        span.heading_actions= back_to_top
      table.non-functional_results.detailed_results
        thead
          tr
            th#th_nft_test_case
              -if @history
                span.sort
                  a.see_latest_button.sort_btn.active.nft_button href="#"
                    | See latest
                  a.see_nft_history_button.sort_btn.nft_button href="#"
                    | See history
            th.th_name Measurement
            th.th_measured Value
            th.th_target Target
            th.th_limit Fail limit
            th.th_to_target % of target
            th.th_result Result
            th#th_notes Notes

        = render :partial => "nft_feature", :collection => @report.nft_sets
      /! NFT history

      -if @history
        table.non-functional_results.detailed_results.history style="display:none;"
          thead
            tr
              th#th_nft_test_case
                span.sort
                  a.see_latest_button.sort_btn.nft_button href="#"
                    | See latest
                  a.see_nft_history_button.sort_btn.active.nft_button href="#"
                    | See history
              th.th_name Measurement
              th.th_measured
                = format_date_for_nft_history @nft_trends.start_date
                '  -
                = format_date_for_nft_history @report.tested_at

          = render :partial => "nft_feature_history", :collection => @report.nft_sets

    = render :partial => 'editable_text', :locals => {:anchor => 'issue_summary', :title => "Issue Summary", :field => 'issue_summary'}

    = render :partial => 'reports/file_attachments'

    = render :partial => 'reports/raw_result_files', :locals => {:result_files => @report.result_files}

    = yield :wizard_actions
